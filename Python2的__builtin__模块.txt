'Ellipsis': Ellipsis,
'False': False,
'True': True,
'None': None,
'NotImplemented': NotImplemented,
'__debug__': True,

'_': ['__builtins__', '__doc__', '__name__', '__package__', 'pprint'],
'__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil'         object;     Ellipsis represents `...' in slices.",
'__import__': <built-in function __import__>,
'__name__': '__builtin__',
'__package__': None,

'apply': <built-in function apply>,
'cmp': <built-in function cmp>,
'coerce': <built-in function coerce>,
'execfile': <built-in function execfile>,
'intern': <built-in function intern>,
'raw_input': <built-in function raw_input>,
'reload': <built-in function reload>,
'unichr': <built-in function unichr>,

'basestring': <type 'basestring'>,
'buffer': <type 'buffer'>,
'file': <type 'file'>,
'long': <type 'long'>,
'unicode': <type 'unicode'>,

'abs': <built-in function abs>,
'all': <built-in function all>,
'any': <built-in function any>,
'bin': <built-in function bin>,
'callable': <built-in function callable>,
'chr': <built-in function chr>,
'compile': <built-in function compile>,
'delattr': <built-in function delattr>,
'dir': <built-in function dir>,
'divmod': <built-in function divmod>,
'eval': <built-in function eval>,
'format': <built-in function format>,
'getattr': <built-in function getattr>,
'globals': <built-in function globals>,
'hasattr': <built-in function hasattr>,
'hash': <built-in function hash>,
'hex': <built-in function hex>,
'id': <built-in function id>,
'input': <built-in function input>,
'isinstance': <built-in function isinstance>,
'issubclass': <built-in function issubclass>,
'iter': <built-in function iter>,
'len': <built-in function len>,
'locals': <built-in function locals>,
'max': <built-in function max>,
'min': <built-in function min>,
'next': <built-in function next>,
'oct': <built-in function oct>,
'open': <built-in function open>,
'ord': <built-in function ord>,
'pow': <built-in function pow>,
'print': <built-in function print>,
'repr': <built-in function repr>,
'round': <built-in function round>,
'setattr': <built-in function setattr>,
'sorted': <built-in function sorted>,
'sum': <built-in function sum>,
'vars': <built-in function vars>,

'bool': <type 'bool'>,
'bytearray': <type 'bytearray'>,
'bytes': <type 'str'>,
'complex': <type 'complex'>,
'dict': <type 'dict'>,
'float': <type 'float'>,
'frozenset': <type 'frozenset'>,
'int': <type 'int'>,
'list': <type 'list'>,
'set': <type 'set'>,
'str': <type 'str'>,
'tuple': <type 'tuple'>,
'type': <type 'type'>,
'memoryview': <type 'memoryview'>,
'object': <type 'object'>,

'classmethod': <type 'classmethod'>,
'staticmethod': <type 'staticmethod'>,
'property': <type 'property'>,
'super': <type 'super'>,

'enumerate': <type 'enumerate'>,
'filter': <built-in function filter>,
'map': <built-in function map>,
'reduce': <built-in function reduce>,

'range': <built-in function range>,
'xrange': <type 'xrange'>,
'reversed': <type 'reversed'>,
'slice': <type 'slice'>,
'zip': <built-in function zip>

'exit': Use exit() or Ctrl-Z plus Return to exit,
'quit': Use quit() or Ctrl-Z plus Return to exit,

'copyright': Copyright (c) 2001-2016 Python Software Foundation.
            All Rights Reserved.

            Copyright (c) 2000 BeOpen.com.
            All Rights Reserved.

            Copyright (c) 1995-2001 Corporation for National Research Initiatives.
            All Rights Reserved.

            Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
            All Rights Reserved.,
'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
            for supporting Python development.  See www.python.org for more information.,
'license': Type license() to see the full license text,
'help': Type help() for interactive help, or help(object) for help about object.,


'BaseException': <type 'exceptions.BaseException'>,

'GeneratorExit': <type 'exceptions.GeneratorExit'>,
'KeyboardInterrupt': <type 'exceptions.KeyboardInterrupt'>,
'SystemExit': <type 'exceptions.SystemExit'>,

'EnvironmentError': <type 'exceptions.EnvironmentError'>,
'IOError': <type 'exceptions.IOError'>,
'WindowsError': <type 'exceptions.WindowsError'>,

'Exception': <type 'exceptions.Exception'>,
'StopIteration': <type 'exceptions.StopIteration'>,
'ArithmeticError': <type 'exceptions.ArithmeticError'>,
    'FloatingPointError': <type 'exceptions.FloatingPointError'>,
    'OverflowError': <type 'exceptions.OverflowError'>,
    'ZeroDivisionError': <type 'exceptions.ZeroDivisionError'>,
'AssertionError': <type 'exceptions.AssertionError'>,
'AttributeError': <type 'exceptions.AttributeError'>,
'BufferError': <type 'exceptions.BufferError'>,
'EOFError': <type 'exceptions.EOFError'>,
'ImportError': <type 'exceptions.ImportError'>,

'LookupError': <type 'exceptions.LookupError'>,
    'IndexError': <type 'exceptions.IndexError'>,
    'KeyError': <type 'exceptions.KeyError'>,
'MemoryError': <type 'exceptions.MemoryError'>,
'NameError': <type 'exceptions.NameError'>,
    'UnboundLocalError': <type 'exceptions.UnboundLocalError'>,
'OSError': <type 'exceptions.OSError'>,
'ReferenceError': <type 'exceptions.ReferenceError'>,
'RuntimeError': <type 'exceptions.RuntimeError'>,
    'NotImplementedError': <type 'exceptions.NotImplementedError'>,
'StandardError': <type 'exceptions.StandardError'>,
'SyntaxError': <type 'exceptions.SyntaxError'>,
    'IndentationError': <type 'exceptions.IndentationError'>,
        'TabError': <type 'exceptions.TabError'>,
'SystemError': <type 'exceptions.SystemError'>,
'TypeError': <type 'exceptions.TypeError'>,
'ValueError': <type 'exceptions.ValueError'>,
    'UnicodeError': <type 'exceptions.UnicodeError'>,
        'UnicodeDecodeError': <type 'exceptions.UnicodeDecodeError'>,
        'UnicodeEncodeError': <type 'exceptions.UnicodeEncodeError'>,
        'UnicodeTranslateError': <type 'exceptions.UnicodeTranslateError'>,



'Warning': <type 'exceptions.Warning'>,
    'BytesWarning': <type 'exceptions.BytesWarning'>,
    'DeprecationWarning': <type 'exceptions.DeprecationWarning'>,
    'FutureWarning': <type 'exceptions.FutureWarning'>,
    'ImportWarning': <type 'exceptions.ImportWarning'>,
    'PendingDeprecationWarning': <type 'exceptions.PendingDeprecationWarning'>,
    'RuntimeWarning': <type 'exceptions.RuntimeWarning'>,
    'SyntaxWarning': <type 'exceptions.SyntaxWarning'>,
    'UnicodeWarning': <type 'exceptions.UnicodeWarning'>,
    'UserWarning': <type 'exceptions.UserWarning'>,
    
    
    
    
    
    
    